# 所有通用配置
## Info: 终端中正常命令 awk '' , 在 alias中就只能写成 awk "", 而且 $ 需要转义

# Shell
alias Kremove='sudo apt remove --purge' # 完全卸载软件
alias https='http —default-scheme=https' # httpie 的https方式

# 基础命令简化
alias pa='ps auxf' # 所有进程
alias pa.user='ps uxf' # 当前用户的进程
alias l='ls -lFh' # ls -l 简写
alias lt='ls -lFh --sort=t' # ls -lFh --sort=t
alias la='ls -lFAh' # ls -a 简写
alias ll='ls -Fh' # ls -Fh
alias lla='ls -FAh' # ls -A
alias ..='cd ..' # cd .. 简写
alias ...='cd ../../' # cd ../../
alias kuang='cd com/github/kuangcp'
alias ja='java -jar' # java -jar
alias kdu='du -sh' # du -sh 
alias sudo='sudo ' #sudo别名,方便运行别名
alias le='less -R' # less -R
alias len='less -N -R' # less -N -R
alias C='clear' # clear
alias mpp='makedir -p'

# 多参数简化
alias fut='fuser -v -n tcp' # fuser 查询tcp端口
alias fuu='fuser -v -n udp' # fuser udp
alias dsort='sort -hr' # 反序
alias now='date "+%F %T %A"' # 当前日期时间 date "+%F %T %A"
alias dates='date --date=@\'
alias nowf='date "+%F_%T"' # 用于命令行
alias nowD='date +%Y%m%d' # 年月日
alias javaDir='mkdir -p src/main/java && mkdir -p src/test/java && mkdir -p src/main/resources && mkdir -p src/test/resources' # 项目根目录下创建好目录结构
alias javaPackage='mkdir -p src/main/java/com/github/kuangcp' # 创建好包

## 服务
alias S.net='sudo /etc/init.d/networking restart' # 网络重启

# 软件简化
alias hh='htop' # htop
alias gal='gradle' # gradle
alias gy='groovy' # groovy简写
alias py='python3' # python3 简写
alias py2='python' # python2 简写
alias tt='textadept' # textadept简写
alias ged='gedit' # gedit 简写
alias typ='typora' # typora 简写
alias fm='(dde-file-manager . &) >/dev/null 2>&1' # dde-file-manager
alias na='(nautilus . &) >/dev/null 2>&1' # nautilus
alias dol='(dolphin . &) >/dev/null 2>&1' # dolphin
alias thu='(thunar . &) >/dev/null 2>&1' # thunar
alias wcola='(cola &) >/dev/null 2>&1 ' # cola
alias lao='wcola' # cola
alias dcola='(git-dag &) >/dev/null 2>&1' # git-dag
alias Krec='asciinema rec' # 开始录制终端
alias nport='nmap -sT ' # namp -sT 
alias ngr='sudo nginx -s reload'
alias jvm='(visualvm&)'

# 复杂命令
alias lfil='ls -lR|grep "^-"|wc -l' #统计文件夹下文件个数
alias ldil='ls -lR|grep "^d"|wc -l' #统计文件夹下文件夹个数
alias kdu.sort='du -h | dsort | less' # 按文件占用大小排序
alias kdu.isort='du -h --exclude .git --exclude .svn | dsort | less' # 忽略.git文件
alias kdu.head='du -hsx * .* | dsort | head -n 20' # 获取当前目录最大的目录或文件
alias krep='echo "USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND" && ps aux | egrep -v "grep" | grep -i' # 查询进程
alias ksum.me='grep -v grep | awk "{sum+=\$6};END {print sum \"K \" sum/1024\"M \"}"' # 与 krep 组合 示例: krep java | ksum.me
alias kstat='ps aux | grep -v RSS | awk "{print \$6 \"\\t\" \$6/1024\"M\" \"\\t\" \$2 \"\\t\" \$11 }" | dsort | less' # 按内存使用量对进程排序
alias trep='tree | grep -i' # tree | grep -i
alias fs='find . -iname' # find . -iname 

alias k.todo='ag "\- \[ \] | TODO"' # find all todo 

# sudo echo 不起作用, 只能在root下执行
alias kcache.page='sync  && echo 1 > /proc/sys/vm/drop_caches'
alias kcache.inode='sync && echo 2 > /proc/sys/vm/drop_caches'
alias kcache.slab='sync  && echo 3 > /proc/sys/vm/drop_caches'

## 入参为管道的命令 common
alias kc.crlf='xargs sed -i "s/\r//g"' # crlf -> lf
alias kc.count='sort | uniq -c | sort -hr' # 去重累计排序
alias kc.sum='awk "{sum += \$1};END {print sum}"'


## Java
alias kjava.dump='jmap -dump:live,format=b,file=heapLive.hprof' # dump a java process

#############

# Color 
alias color_red='\033[0;31m' # red
alias color_green='\033[0;32m' # green 
alias color_yellow='\033[0;33m' # yellow
alias color_blue='\033[0;34m' # blue
alias color_purple='\033[0;35m' # purple
alias color_cyan='\033[0;36m' # cyan
alias color_white='\033[0;37m' # white   
alias color_default='\033[0m' # default


# Docker
alias da='docker attach' # docker attach Ctrl p q 才能不影响容器退出
alias dt='docker tag' # docker tag
## alias dp='docker ps -s' # docker ps
## alias dpsa='docker ps -as' # docker ps -a
alias dp='docker ps --format "table {{.ID}}  {{.Names}}\t{{.Image}}\t{{.RunningFor}}\t{{.Command}}\t{{.Status}}"'
alias dps='docker ps -a --format "table {{.ID}}  {{.Names}}\t{{.Image}}\t{{.CreatedAt}}\t{{.Command}}\t{{.Status}}"' # format docker ps
alias dpp='docker ps -a --format "table {{.ID}}  {{.Names}}\t{{.Size}}\t{{.Mounts}}\t{{.Ports}}"' # port and size 
alias drm='docker rm' # docker rm 
alias drmf='docer rm -f ' # docker rm -f
alias drmi='docker rmi ' # docker rmi
alias dim='docker images' # docker images
alias dstat='docker stats' # docker stats
alias don='docker start' # docker start
alias doni='docker start -i' # 交互式启动
alias dres='docker restart' # docker restart
alias doff='docker stop' # docker stop
alias dexec='docker exec -it' # docker exec -it
alias dport='docker port' # docker port
alias dco='docker-compose'


# 问题
alias P.bell='sudo rmmod pcspkr' # 临时关闭终端响铃 或者 xset -b
alias P.fcitx='fcitx-autostart &' # 先把fcitx杀掉,然后跑这个,或者直接跑这个
alias P.gradle='gradle --stop' # 杀掉Gadle守护进程
alias P.swap='sudo swapoff -a && sudo swapon -a' # 重置交换分区
alias P.time='sudo /usr/sbin/ntpdate -u cn.pool.ntp.org' # 同步时间
alias P.deepin.wm='(killall deepin-wm-switcher; deepin-wm --replace &)' # 重启桌面管理器

# GIT_CMD
alias gs='git status' # git status 

## stash 
alias gs.s='git stash save' # git stash save
alias gs.sa='git add -A && git stash save' # git add -A && git statsh save
alias gs.d='git stash drop' # git stash drop 
alias gs.p='git stash pop' # git stash pop 
alias gs.a='git stash apply' # git stash apply
alias gs.l='git stash list' # git stash list
alias gs.clean='ga && gs.s && gs.d' # 删除当前所有更改 不可恢复!
alias wip='git stash list | grep $(git symbolic-ref --short -q HEAD)' #  查看当前分支是否有 stash 存在

## cherry pick
alias gcp='git cherry-pick'
alias gcpa='git cherry-pick --abort'
alias gcpc='git cherry-pick --continue'

## add 
alias ga='git add -A && git status' # git add -A && git status
alias gaf='git add' # git add
alias gau='git add -u' # 只添加修改的文件
alias gad.add='gs -s | grep "^??" | awk "{print \$2}"  | xargs git add' # 只添加新增的文件

alias gcl='git clone --depth 1' # git clone --depth 1
alias gcls='git clone' # git clone

alias gr='git reset' # git reset 
alias gr.lc='git reset --soft HEAD^' # git reset --soft HEAD^ 撤销上次提交
alias grm='git remote' # git remote
alias gv='git remote -v' # git remote -v
alias glm='git ls-remote' # git ls-remote

alias gt='git tag' # git tag

alias gb='git branch' # git branch
alias gbvv='git branch -vv' # git branch -vv

alias gm='git commit -m' # git commit -m
alias gam='git commit -am' # git commit -am
alias gmv='git commit -v' # git commit -v  查看更改,输入提交信息

alias gme='git merge --no-ff ' # git merge --no-ff 简写
alias gp='git push' # git push
alias gpt='git push --tags'
alias gpal='git push --all' # git push --all
alias gpoc='git push -u origin $(git symbolic-ref --short -q HEAD)' # git push -u origin currentBranch
alias gl='git pull' # git pull 
alias gd='git diff' # git diff
alias gdc='git diff --cached' # git diff --cached
alias gh='git checkout' # git checkout
alias ghl='git checkout -' # git checkout - 
alias ghb='git checkout -b' # git checkout -b

alias gls='git ls-files' # git ls-files
alias gline='git ls-files | xargs cat | wc -l' # 查看仓库中所有文本文件行数总和

alias gcount='git log   --author="$(git config --get user.name)" --pretty=tformat: --numstat | awk "{a+=\$1; b+=\$2; c+=\$1-\$2}; END {printf \"add: %s remove: %s total: %s\n\", a ,b ,c }"' # 统计更改行数

alias glo='git log --oneline --decorate' # 最简单
alias glog='git log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=format:"%F %T"' # glog format own define
alias glogl='git log --pretty=format:"%h %ad | %s%d [%an]" --date=format:"%F %T"' # glog format own define
alias glogc="git log --graph --pretty=format:'%Cred%h%Creset %Cgreen%ad%Creset | %C(yellow)%d%Creset%C(bold cyan)<%an>%Creset %s ' --abbrev-commit --date=format:'%F %T'" # 彩色输出
alias gshb='git show-branch'

alias gco.add='printf "add line:"; gdc | grep -E "^\+{1}[^+]"|wc -l'
alias gco.del='printf "del line:"; gdc | grep -E "^-{1}[^-]"|wc -l'

alias gls.author='gls | grep \\.java  | xargs cat | grep "uthor " | kc.count' # java author
alias gls.large.commit='git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -40 | awk "{print\$1}"'
alias gls.large='git rev-list --objects --all | grep "$(gls.large.commit)"'

## 统计 git log 
alias glogt='git log --pretty=format:"%h %ad | %s%d [%an]" --date=format:"%H %M %S" | awk "{print \$2}" | kc.count'
alias glogth='git log --pretty=format:"%h %ad | %s%d [%an]" --date=format:"%H %M %S" | awk "{print \$2 \$3}" | kc.count'
alias glogm='git log --pretty=format:"%h %ad | %s%d " --date=format:"%F %T" | grep -v origin | grep -v Merge | awk "{print \$5\" \"\$6\" \"\$7\" \"\$8\" \"\$9}" | kc.count | less'
alias glogau='git log --pretty=format:"%an" | kc.count' # 统计提交作者

## zsh 中 git 插件附属
## alias gloga='git log --oneline --decorate --graph --all' # 简短彩色输出
## alias glol='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'
## alias glola='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --all'

# SVN
alias saf='svn add * --force' # 强制添加所有文件
alias sa='svn add' # svn add 
# alias sc='svn ci -m' # svn 提交, 不能就这样暴力提交
alias sp='svn up' # 下拉代码
## alias st='svn diff --diff-cmd "diff" -x "-q" . | grep Index | cut -d " " -f 2' # 类比 git status -s
alias slog='svn log | less' # 查看日志
alias st='svn st' # git status类似
alias scon='st | egrep "^C"' # 冲突
alias sr='svn revert' # 恢复
alias sres='svn resolved' # 
alias sfo='svn info' # svn info
alias sdf='svn diff' # svn diff
alias scc='svn st | grep -E "^(C)|(D\s*C)"' # 查看冲突文件

################################################################
# Script 
# SCRIPT 环境变量定义在 custom 中

alias kg='dash $SCRIPT/shell/repos-manager.sh' # 检查所有仓库状态 Shell 实现并通过读取自定义aliases文件
alias gdcs='git diff --cached | sh $SCRIPT/shell/text/format_change.sh' # 彩色输出简化的更改

alias Kcsdn='py $SCRIPT/python/increase_readed.py' # increase 

alias kc='sh $SCRIPT/shell/assistant/c_run.sh' # 编译运行C文件辅助脚本
alias kpy.test='sh $SCRIPT/shell/assistant/python_unittest.sh' # 运行py单元测试辅助脚本

alias kcount='py $SCRIPT/python/tool/doc/count_char_zh.py' # 统计中文

alias kdd='dash $SCRIPT/shell/text/deal_md.sh' # 处理MarkDown文件
alias kdd.py='py $SCRIPT/shell/text/refresh_catalog.py' # refresh catalog
alias Kdesktop='dash $SCRIPT/shell/text/deal_desktop.sh' # 创建一个desktop文件

alias kfs='bash $SCRIPT/shell/base/process-tool.sh' # 进程工具
alias kfs.pm='printf "%-10s" "Java: "; kfs java m; printf "%-10s" "VSCode: "; kfs VSCode m; printf "%-10s" "Firefox :"; kfs firefox m'

alias kf='sh $SCRIPT/shell/base/file-tool.sh' # 文件路径工具
alias kd='sh $SCRIPT/shell/base/docker-tool.sh' # Docker工具
alias kf.java='kf f \.java | xargs cat | wc -l' # 统计 java 行数

alias krm='bash $SCRIPT/shell/base/recycle-bin.sh' # 回收站工具 bash
alias kh='bash $SCRIPT/shell/sdk/mythsdk.sh' # sdk工具
alias K.h='bash $SCRIPT/shell/base/show_alias_help.sh' # alias展示
alias krd='bash $SCRIPT/shell/text/refresh_index.sh' # 读md
alias Kpu='bash $SCRIPT/shell/deploy/deploy_file_by_pass.sh' # 发布war
alias Kpu.conf='tt $SCRIPT/shell/deploy/server.conf' # 配置文件
alias Kproto='bash $SCRIPT/shell/text/read_protoc.sh' # protoc

alias \?='sh $SCRIPT/shell/base/ShowReadme.sh' # readme 查看

alias kw.branch='bash $SCRIPT/shell/work/git-tool.sh'
alias km.ts='bash $SCRIPT/shell/media/mergets.sh'

## Python
alias kee='sh $SCRIPT/python/tool/key/anaiysis.sh' # 分析按键
alias kee.key='kee -d | sort| awk "{print \$2};" | egrep "^[A-Z]{1,1}$" | xargs echo | less' # 按顺序列出按键
alias kee.key.small='kee.key | xargs printf "\033[0;32m%s\033[0;0m"' # 缩略
alias krecord='sh $SCRIPT/python/tool/key/record.sh' # 记录脚本
alias kdns='py $SCRIPT/python/tool/switch-host-group/app.py' # 切换 hosts group
alias kshell='sh $SCRIPT/shell/text/quick_create.sh' # 快速创建shell

alias kmaven.dp='py $SCRIPT/python/java/maven/analysis_dependency.py' # 分析 Maven 依赖 提示可能的冲突

##############################################################
