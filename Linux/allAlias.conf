-='cd -'
..='cd ..'
...='cd ../../'
....=../../..
.....=../../../..
......=../../../../..
1='cd -'
2='cd -2'
3='cd -3'
4='cd -4'
5='cd -5'
6='cd -6'
7='cd -7'
8='cd -8'
9='cd -9'
'?'='sh $SCRIPT/shell/base/ShowReadme.sh'
K.h='bash $SCRIPT/shell/base/show_alias_help.sh'
KK=pwd
Ka='configEditor ~/.system.ini &'
Kau='source ~/.zshrc'
Kclient='sh ~/IdeaProjects/BaseLearn/MythRedisClient/run.sh'
Kcsdn='py $SCRIPT/python/increase_readed.py'
Kcsdn.log='less /home/kcp/.config/app-conf/log/csdn.log'
Kcsdn.status='py $SCRIPT/python/increase_readed.py -s >> /home/kcp/.config/app-conf/log/csdn.log && Kcsdn.log'
Kcus='configEditor ~/.customized.ini &'
Kd.code.c='cd ~/Code/c'
Kd.go='cd /home/kcp/Code/go/'
Kd.hexo='cd ~/hexo'
Kd.img='cd /home/kcp/PycharmProjects/PythonMythLearn/learning/Spider/scrpy_learn/53eo/img'
Kd.linux='cd /media/kcp/Myth/Linux'
Kd.redis='cd ~/Application/Database/redis-3.2.8'
Kd.redis4='cd /home/kcp/Application/Database/redis-4.0.1'
Kd.redis4.10='cd /home/kcp/Application/Database/redis-4.0.10'
Kd.repo='cd /myth/mvnRepo'
Kd.tom.ac='cd /home/kcp/Application/Apache/tomcat/tomcat-activiti'
Kd.tom.io='cd /home/kcp/Application/Apache/tomcat/tomcat-image/apache-tomcat-8.5.14'
Kdesktop='dash $SCRIPT/shell/text/deal_desktop.sh'
Kjar='java -jar'
Kpath='configEditor ~/.path.ini &'
Kproto='bash $SCRIPT/shell/text/read_protoc.sh'
Kpu='bash $SCRIPT/shell/deploy/deploy_file_by_pass.sh'
Kpu.conf='tt $SCRIPT/shell/deploy/server.conf'
Krec='asciinema rec'
Kremove='sudo apt remove --purge'
Krepo='configEditor ~/.repos.ini &'
Kten='ssh ubuntu@111.230.105.93'
Kw.134='sshpass -p "tHoxVL4F" ssh -p 32200 huoshu@120.77.158.59'
Kw.59='sshpass -p "tHoxVL4F" ssh -p 32200 huoshu@47.100.46.134'
Kzsh='configEditor ~/.zshrc'
P.bell='sudo rmmod pcspkr'
P.fcitx='fcitx-autostart &'
P.gradle='gradle --stop'
P.swap='sudo swapoff -a && sudo swapon -a'
P.time='sudo /usr/sbin/ntpdate -u cn.pool.ntp.org'
_=sudo
afind='ack -il'
bcloud=/home/kcp/app/tool/BaiduPCS-Go-v3.5.4-linux-amd64/BaiduPCS-Go
charles='sh /home/kcp/Application/Net/charles/bin/charles &'
color_blue='\033[0;34m'
color_cyan='\033[0;36m'
color_default='\033[0m'
color_green='\033[0;32m'
color_purple='\033[0;35m'
color_red='\033[0;31m'
color_white='\033[0;37m'
color_yellow='\033[0;33m'
configEditor=vscode
d='dirs -v | head -10'
da='docker attach'
dexec='docker exec -it'
dim='docker images'
doff='docker stop'
dol='(dolphin . &) >/dev/null 2>&1'
don='docker start'
doni='docker start -i'
dp='docker ps --format "table {{.ID}}  {{.Names}}\t{{.Image}}\t{{.RunningFor}}\t{{.Command}}\t{{.Status}}"'
dport='docker port'
dpp='docker ps -a --format "table {{.ID}}  {{.Names}}\t{{.Size}}\t{{.Mounts}}\t{{.Ports}}"'
dps='docker ps -a --format "table {{.ID}}  {{.Names}}\t{{.Image}}\t{{.CreatedAt}}\t{{.Command}}\t{{.Status}}"'
drm='docker rm'
drmf='docer rm -f '
drmi='docker rmi '
dsort='sort --human-numeric-sort -r'
dstat='docker stats'
dt='docker tag'
fd='/home/kcp/Application/Net/firefox-dev/firefox -P dev'
ff='/home/kcp/Application/Net/firefox_beta/firefox -P beta'
fm='(dde-file-manager . &) >/dev/null 2>&1'
fs='find . -name'
g=git
ga='git add -A && git status'
gaa='git add --all'
gad.add='gs -s | grep "^??" | awk "{print \$2}"  | xargs git add'
gaf='git add'
gah='git stash'
gah.l='git stash list'
gah.p='git stash pop'
gah.s='git stash save'
gal=gradle
gam='git commit -am'
gap='git apply'
gapa='git add --patch'
gau='git add -u'
gav='git add --verbose'
gb='git branch'
gbD='git branch -D'
gba='git branch -a'
gbd='git branch -d'
gbda='git branch --no-color --merged | command grep -vE "^(\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'
gbl='git blame -b -w'
gbnm='git branch --no-merged'
gbr='git branch --remote'
gbs='git bisect'
gbsb='git bisect bad'
gbsg='git bisect good'
gbsr='git bisect reset'
gbss='git bisect start'
gc='git commit -v'
'gc!'='git commit -v --amend'
gca='git commit -v -a'
'gca!'='git commit -v -a --amend'
gcam='git commit -a -m'
'gcan!'='git commit -v -a --no-edit --amend'
'gcans!'='git commit -v -a -s --no-edit --amend'
gcb='git checkout -b'
gcd='git checkout develop'
gcf='git config --list'
gch='git checkout'
gchl='git checkout -'
gcl='git clone --depth 1'
gclean='git clean -fd'
gcls='git clone'
gcm='git checkout master'
gcmsg='git commit -m'
'gcn!'='git commit -v --no-edit --amend'
gco='git checkout'
gcount='git shortlog -sn'
gcp='git cherry-pick'
gcpa='git cherry-pick --abort'
gcpc='git cherry-pick --continue'
gcs='git commit -S'
gcsm='git commit -s -m'
gd='git diff'
gdc='git diff --cached'
gdca='git diff --cached'
gdcs='git diff --cached | sh $SCRIPT/shell/text/format_change.sh'
gdct='git describe --tags `git rev-list --tags --max-count=1`'
gdcw='git diff --cached --word-diff'
gds='git diff --staged'
gdt='git diff-tree --no-commit-id --name-only -r'
gdw='git diff --word-diff'
ged=gedit
gf='git fetch'
gfa='git fetch --all --prune'
gfo='git fetch origin'
gg='git gui citool'
gga='git gui citool --amend'
ggpull='git pull origin $(git_current_branch)'
ggpur=ggu
ggpush='git push origin $(git_current_branch)'
ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
ghh='git help'
gignore='git update-index --assume-unchanged'
gignored='git ls-files -v | grep "^[[:lower:]]"'
git-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'
gk='\gitk --all --branches'
gke='\gitk --all $(git log -g --pretty=%h)'
gl='git pull'
glg='git log --stat'
glgg='git log --graph'
glgga='git log --graph --decorate --all'
glgm='git log --graph --max-count=10'
glgp='git log --stat -p'
gline='git ls-files | xargs cat | wc -l'
glm='git ls-remote'
glo='git log --oneline --decorate'
globurl='noglob urlglobber '
glog='git log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short'
gloga='git log --oneline --decorate --graph --all'
glp=_git_log_prettily
gls='git ls-files'
glum='git pull upstream master'
gm='git commit -m'
gma='git merge --abort'
gme='git merge --no-ff '
gmom='git merge origin/master'
gmt='git mergetool --no-prompt'
gmtvim='git mergetool --no-prompt --tool=vimdiff'
gmum='git merge upstream/master'
gmv='git commit -v'
gob='go build'
goc='go clean'
god='go doc'
gof='go fmt'
gofa='go fmt ./...'
gog='go get'
goi='go install'
gol='go list'
gop='cd $GOPATH'
gopb='cd $GOPATH/bin'
gops='cd $GOPATH/src'
gor='go run'
got='go test'
gov='go vet'
gp='git push'
gpal='git push --all'
gpd='git push --dry-run'
gpf='git push --force-with-lease'
'gpf!'='git push --force'
gpoat='git push origin --all && git push origin --tags'
gpristine='git reset --hard && git clean -dfx'
gpsup='git push --set-upstream origin $(git_current_branch)'
gpu='git push upstream'
gpv='git push -v'
gr='git reset'
gra='git remote add'
gradle=gradle-or-gradlew
grb='git rebase'
grba='git rebase --abort'
grbc='git rebase --continue'
grbd='git rebase develop'
grbi='git rebase -i'
grbm='git rebase master'
grbs='git rebase --skip'
grep='grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
grh='git reset'
grhh='git reset --hard'
grm='git remote'
grmc='git rm --cached'
grmv='git remote rename'
grrm='git remote remove'
grset='git remote set-url'
grt='cd $(git rev-parse --show-toplevel || echo ".")'
gru='git reset --'
grup='git remote update'
grv='git remote -v'
gs='git status'
gsb='git status -sb'
gsd='git svn dcommit'
gsh='git show'
gsi='git submodule init'
gsps='git show --pretty=short --show-signature'
gsr='git svn rebase'
gss='git status -s'
gst='git status'
gsta='git stash save'
gstaa='git stash apply'
gstall='git stash --all'
gstc='git stash clear'
gstd='git stash drop'
gstl='git stash list'
gstp='git stash pop'
gsts='git stash show --text'
gsu='git submodule update'
gts='git tag -s'
gtv='git tag | sort -V'
gunignore='git update-index --no-assume-unchanged'
gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
gup='git pull --rebase'
gupa='git pull --rebase --autostash'
gupav='git pull --rebase --autostash -v'
gupv='git pull --rebase -v'
gv='git remote -v'
gwch='git whatchanged -p --abbrev-commit --pretty=medium'
gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify -m "--wip-- [skip ci]"'
gy=groovy
hh=htop
history=omz_history
home.config='vim /home/kcp/Documents/Notes/home/js/main/main.data.js'
https='http â€”default-scheme=https'
ja='java -jar'
kc='sh $SCRIPT/shell/c/c_run.sh'
kcount='py $SCRIPT/python/tool/doc/count_char_zh.py'
kdd='dash $SCRIPT/shell/text/deal_md.sh'
kdu='du -sh'
kdu.head='du -hsx * | sort -rh | head'
kdu.isort='du -h --exclude .git --exclude .svn | dsort | less'
kdu.sort='du -h | dsort | less'
kee='sh $SCRIPT/python/tool/key/anaiysis.sh'
kee.key='kee -d | sort| awk "{print \$2};" | egrep "^[A-Z]{1,1}$" | xargs echo | less'
kee.key.small='kee.key | xargs printf "\033[0;32m%s\033[0;0m"'
kf='sh $SCRIPT/shell/base/FileTool.sh'
kfs='bash $SCRIPT/shell/base/Performance.sh'
kfs.pm.firefox='kfs pm firefox'
kfs.pm.java='kfs pm java'
kfs.pm.vscode='kfs pm VSCode'
kg='time dash $SCRIPT/shell/check_by_aliases.sh'
kg.abstract_zh='cd /home/kcp/Code/java/weixiduo'
kg.baidu-trans='cd /home/kcp/Code/python/baidu-trans-cli'
kg.blade='cd /home/kcp/IdeaProjects/Base/ToolByBlade'
kg.c='cd /home/kcp/Code/c/LearnC'
kg.config='cd /home/kcp/Note/Configs'
kg.diary='cd /home/kcp/Note/diary/'
kg.docker='cd /home/kcp/Note/DockerfileList'
kg.ecology='cd /home/kcp/Code/java/LearnJavaEcology'
kg.extension='cd /home/kcp/Code/view/LearnWebExtension'
kg.go='cd /home/kcp/Code/go/src/github.com/kuangcp/GoBase'
kg.gradle='cd /home/kcp/IdeaProjects/Base/GradleBase'
kg.groovy='cd /home/kcp/IdeaProjects/Base/LearnGroovy/'
kg.hecheng='cd /home/kcp/Code/work/synthesizer'
kg.home='cd /home/kcp/doc/home'
kg.images='cd /home/kcp/Pictures/ImageRepos'
kg.java='cd /home/kcp/IdeaProjects/Base/JavaBase'
kg.junit='cd /home/kcp/Code/java/LearnJunit'
kg.memo='cd /home/kcp/Note/Memo'
kg.netty='cd /home/kcp/IdeaProjects/Base/NettyBook2'
kg.orm='cd /home/kcp/IdeaProjects/Base/MythORM'
kg.poi='cd /home/kcp/IdeaProjects/Base/mythpoi'
kg.python='cd /home/kcp/PycharmProjects/PythonMythLearn/'
kg.redis='cd /home/kcp/IdeaProjects/Base/MythRedisClient/'
kg.repos='cd /home/kcp/.m2/repository'
kg.script='cd /home/kcp/Application/Script/'
kg.spring.base='cd /home/kcp/IdeaProjects/SpringBoot/SpringBase'
kg.toolkit='cd /home/kcp/IdeaProjects/Base/JavaToolKit/'
kh='bash $SCRIPT/shell/sdk/mythsdk.sh'
krd='bash $SCRIPT/shell/text/refresh_index.sh'
krecord='sh $SCRIPT/python/tool/key/record.sh'
krep='echo "USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND" && ps aux | egrep -v "grep" | grep -i'
krm='bash $SCRIPT/shell/base/RecycleBin.sh'
krr=translation
kshell='sh $SCRIPT/shell/text/quick_create.sh'
kstat='ps aux | grep -v RSS | awk "{print \$6 \"\\t\" \$6/1024\"M\" \"\\t\" \$2 \"\\t\" \$11 }" | sort --human-numeric-sort -r | less'
ksum.me='grep -v grep | awk "{sum+=\$6};END {print sum \"K \" sum/1024\"M \"}"'
kuu=baidu-trans
l='ls -lFh'
la='ls -lFAh'
ldil='ls -lR|grep "^d"|wc -l'
le='less -R'
lfil='ls -lR|grep "^-"|wc -l'
ll='ls -Fh'
lla='ls -FAh'
ls='ls --color=tty'
lsa='ls -lah'
lt='fuser -v -n tcp'
lu='fuser -v -n udp'
md='mkdir -p'
mvn=mvn-or-mvnw
mvn-updates='mvn versions:display-dependency-updates'
mvnag='mvn archetype:generate'
mvnboot='mvn spring-boot:run'
mvnc='mvn clean'
mvnce='mvn clean eclipse:clean eclipse:eclipse'
mvnci='mvn clean install'
mvncie='mvn clean install eclipse:eclipse'
mvncist='mvn clean install -DskipTests'
mvncisto='mvn clean install -DskipTests --offline'
mvncom='mvn compile'
mvnct='mvn clean test'
mvncv='mvn clean verify'
mvnd='mvn deploy'
mvndocs='mvn dependency:resolve -Dclassifier=javadoc'
mvndt='mvn dependency:tree'
mvne='mvn eclipse:eclipse'
mvnjetty='mvn jetty:run'
mvnp='mvn package'
mvns='mvn site'
mvnsrc='mvn dependency:sources'
mvnt='mvn test'
mvntc='mvn tomcat:run'
mvntc7='mvn tomcat7:run'
na='(nautilus . &) >/dev/null 2>&1'
ng=/home/kcp/Application/Net/Ngrok/ngrok
now='date "+%Y-%m-%d %H:%M:%S"'
nport='nmap -sT '
pa='ps aux'
paf='ps auxf'
please=sudo
py=python3
py2=python
qs=/home/kcp/Application/Net/qiniu/qshell-linux-x64
rd=rmdir
sa='svn add'
saf='svn add * --force'
scon='st | egrep "^C"'
sd=sublime-text-dev
sfo='svn info'
slog='svn log | less'
sp='svn up'
sr='svn revert'
st='svn st'
sudo='sudo '
thu='(thunar . &) >/dev/null 2>&1'
todo=/home/kcp/Application/Text/todo.txt-cli/todo.sh
trep='tree | grep -i'
tt=textadept
typ=typora
vs=vscode
vscode=/home/kcp/Application/Text/VsCode/VSCode-linux-x64/bin/code
vsd='vscode --folder-uri=file://`pwd`'
which-command=whence
wrk=/home/kcp/app/tool/wrk
yed='java -jar /usr/share/yed/yed.jar &'
